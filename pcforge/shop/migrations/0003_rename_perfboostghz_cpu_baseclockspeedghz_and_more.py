# Generated by Django 5.1.6 on 2025-02-14 19:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0002_rename_images_image_alter_product_price_cpu_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='cpu',
            old_name='perfBoostGHz',
            new_name='baseClockSpeedGHz',
        ),
        migrations.RenameField(
            model_name='cpu',
            old_name='performanceGHz',
            new_name='boostClockSpeedGHz',
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chipset', models.CharField(max_length=255)),
                ('memoryType', models.CharField(max_length=255)),
                ('memoryGB', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('baseClockSpeedGHz', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('boostClockSpeedGHz', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('lengthMM', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('widthMM', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('gpuChip', models.CharField(max_length=255)),
                ('vramType', models.CharField(max_length=255)),
                ('vramGB', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memoryType', models.CharField(max_length=255)),
                ('speedMHz', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('capacityGB', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('casLatency', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('modules', models.PositiveIntegerField()),
                ('printedCircuitBoard', models.CharField(max_length=255)),
                ('chips', models.CharField(max_length=255)),
                ('heatsink', models.CharField(max_length=255)),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socket', models.CharField(max_length=255)),
                ('chipset', models.CharField(max_length=255)),
                ('formFactor', models.CharField(max_length=255)),
                ('maxMemoryGB', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('maxMemorySlots', models.PositiveIntegerField()),
                ('printedCircuitBoard', models.CharField(max_length=255)),
                ('voltageRegulator', models.CharField(max_length=255)),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
    ]
