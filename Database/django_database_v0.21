# prompt: make a product model with attributes: id (ten-digit positive integer), price (six-digit positive float with two digits past the decimal point)

from django.db import models
from django.core.validators import MinValueValidator # Import MinValueValidator

class Product(models.Model):
    id = models.PositiveIntegerField(primary_key=True)
    price = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    name = models.CharField(max_length=255)
    description = models.TextField()

class Image(models.Model):
    prod_id = models.ForeignKey(Product, on_delete=models.CASCADE)
    image = models.CharField(max_length=255)

class CPU(models.Model):
    prod_id = models.ForeignKey(Product, on_delete=models.CASCADE)
    coreCount = models.PositiveIntegerField()
    baseClockSpeedGHz = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    boostClockSpeedGHz = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    microArch = models.CharField(max_length=255)
    integratedGraphics = models.CharField(max_length=255)
    integratedHeatSpreader = models.CharField(max_length=255)
    siliconType = models.CharField(max_length=255)
    substrate = models.CharField(max_length=255)
  
class Memory(models.Model):
    prod_id = models.ForeignKey(Product, on_delete=models.CASCADE)
    memoryType = models.CharField(max_length=255)
    speedMHz = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    capacityGB = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    casLatency = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    modules = models.PositiveIntegerField()
    printedCircuitBoard = models.CharField(max_length=255)
    chips = models.CharField(max_length=255)
    heatsink = models.CharField(max_length=255)
    
class GPU(models.Model):
    prod_id = models.ForeignKey(Product, on_delete=models.CASCADE)
    chipset = models.CharField(max_length=255)
    memoryType = models.CharField(max_length=255)
    memoryGB = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    baseClockSpeedGHz = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    boostClockSpeedGHz = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    lengthMM = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    widthMM = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    gpuChip = models.CharField(max_length=255)
    vramType = models.CharField(max_length=255)
    vramGB = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])

class Motherboard(models.Model):
    prod_id = models.ForeignKey(Product, on_delete=models.CASCADE)
    socket = models.CharField(max_length=255)
    chipset = models.CharField(max_length=255)
    formFactor = models.CharField(max_length=255)
    maxMemoryGB = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(0)])
    maxMemorySlots = models.PositiveIntegerField()
    printedCircuitBoard = models.CharField(max_length=255)
    voltageRegulator = models.CharField(max_length=255)
